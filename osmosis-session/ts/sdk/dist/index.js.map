{"version":3,"file":"index.js","sources":["../src/contracts/CounterContract.ts"],"sourcesContent":["/**\n* This file was automatically generated by cosmwasm-typescript-gen@0.3.9.\n* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,\n* and run the cosmwasm-typescript-gen generate command to regenerate this file.\n*/\n\nimport { CosmWasmClient, ExecuteResult, SigningCosmWasmClient } from \"@cosmjs/cosmwasm-stargate\";\nimport { Coin, StdFee } from \"@cosmjs/amino\";\nexport type ExecuteMsg = {\n  increment: {\n    [k: string]: unknown;\n  };\n} | {\n  decrement: {\n    [k: string]: unknown;\n  };\n} | {\n  reset: {\n    count: number;\n    [k: string]: unknown;\n  };\n};\nexport interface GetCountResponse {\n  count: number;\n  [k: string]: unknown;\n}\nexport interface GetVersionResponse {\n  contract: string;\n  version: string;\n  [k: string]: unknown;\n}\nexport interface InstantiateMsg {\n  count: number;\n  [k: string]: unknown;\n}\nexport type QueryMsg = {\n  get_count: {\n    [k: string]: unknown;\n  };\n} | {\n  get_version: {\n    [k: string]: unknown;\n  };\n};\nexport type Addr = string;\nexport interface State {\n  count: number;\n  owner: Addr;\n  [k: string]: unknown;\n}\nexport interface CounterReadOnlyInterface {\n  contractAddress: string;\n  getCount: () => Promise<GetCountResponse>;\n  getVersion: () => Promise<GetVersionResponse>;\n}\nexport class CounterQueryClient implements CounterReadOnlyInterface {\n  client: CosmWasmClient;\n  contractAddress: string;\n\n  constructor(client: CosmWasmClient, contractAddress: string) {\n    this.client = client;\n    this.contractAddress = contractAddress;\n    this.getCount = this.getCount.bind(this);\n    this.getVersion = this.getVersion.bind(this);\n  }\n\n  getCount = async (): Promise<GetCountResponse> => {\n    return this.client.queryContractSmart(this.contractAddress, {\n      get_count: {}\n    });\n  };\n  getVersion = async (): Promise<GetVersionResponse> => {\n    return this.client.queryContractSmart(this.contractAddress, {\n      get_version: {}\n    });\n  };\n}\nexport interface CounterInterface extends CounterReadOnlyInterface {\n  contractAddress: string;\n  sender: string;\n  increment: (fee?: number | StdFee | \"auto\", memo?: string, funds?: readonly Coin[]) => Promise<ExecuteResult>;\n  decrement: (fee?: number | StdFee | \"auto\", memo?: string, funds?: readonly Coin[]) => Promise<ExecuteResult>;\n  reset: ({\n    count\n  }: {\n    count: number;\n  }, fee?: number | StdFee | \"auto\", memo?: string, funds?: readonly Coin[]) => Promise<ExecuteResult>;\n}\nexport class CounterClient extends CounterQueryClient implements CounterInterface {\n  client: SigningCosmWasmClient;\n  sender: string;\n  contractAddress: string;\n\n  constructor(client: SigningCosmWasmClient, sender: string, contractAddress: string) {\n    super(client, contractAddress);\n    this.client = client;\n    this.sender = sender;\n    this.contractAddress = contractAddress;\n    this.increment = this.increment.bind(this);\n    this.decrement = this.decrement.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n\n  increment = async (fee: number | StdFee | \"auto\" = \"auto\", memo?: string, funds?: readonly Coin[]): Promise<ExecuteResult> => {\n    return await this.client.execute(this.sender, this.contractAddress, {\n      increment: {}\n    }, fee, memo, funds);\n  };\n  decrement = async (fee: number | StdFee | \"auto\" = \"auto\", memo?: string, funds?: readonly Coin[]): Promise<ExecuteResult> => {\n    return await this.client.execute(this.sender, this.contractAddress, {\n      decrement: {}\n    }, fee, memo, funds);\n  };\n  reset = async ({\n    count\n  }: {\n    count: number;\n  }, fee: number | StdFee | \"auto\" = \"auto\", memo?: string, funds?: readonly Coin[]): Promise<ExecuteResult> => {\n    return await this.client.execute(this.sender, this.contractAddress, {\n      reset: {\n        count\n      }\n    }, fee, memo, funds);\n  };\n}"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAIE;AAmDF,IAAA,kBAAA,kBAAA,YAAA;IAIE,SAAY,kBAAA,CAAA,MAAsB,EAAE,eAAuB,EAAA;QAA3D,IAKC,KAAA,GAAA,IAAA,CAAA;AAED,QAAA,IAAA,CAAA,QAAQ,GAAG,YAAA,EAAA,OAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;gBACT,OAAO,CAAA,CAAA,aAAA,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,EAAE;AAC1D,wBAAA,SAAS,EAAE,EAAE;AACd,qBAAA,CAAC,CAAC,CAAA;;aACJ,CAAC;AACF,QAAA,IAAA,CAAA,UAAU,GAAG,YAAA,EAAA,OAAA,SAAA,CAAA,KAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,YAAA;;gBACX,OAAO,CAAA,CAAA,aAAA,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,IAAI,CAAC,eAAe,EAAE;AAC1D,wBAAA,WAAW,EAAE,EAAE;AAChB,qBAAA,CAAC,CAAC,CAAA;;aACJ,CAAC;AAfA,QAAA,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,IAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACzC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC9C;IAYH,OAAC,kBAAA,CAAA;AAAD,CAAC,EAAA,CAAA,CAAA;AAYD,IAAA,aAAA,kBAAA,UAAA,MAAA,EAAA;IAAmC,SAAkB,CAAA,aAAA,EAAA,MAAA,CAAA,CAAA;AAKnD,IAAA,SAAA,aAAA,CAAY,MAA6B,EAAE,MAAc,EAAE,eAAuB,EAAA;AAAlF,QAAA,IAAA,KAAA,GACE,MAAM,CAAA,IAAA,CAAA,IAAA,EAAA,MAAM,EAAE,eAAe,CAAC,IAO/B,IAAA,CAAA;AAED,QAAA,KAAA,CAAA,SAAS,GAAG,UAAO,GAAsC,EAAE,IAAa,EAAE,KAAuB,EAAA;AAA9E,YAAA,IAAA,GAAA,KAAA,KAAA,CAAA,EAAA,EAAA,GAAsC,GAAA,MAAA,CAAA,EAAA;;;;AAChD,wBAAA,KAAA,CAAA,EAAA,OAAA,CAAA,CAAA,YAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE;AAClE,gCAAA,SAAS,EAAE,EAAE;AACd,6BAAA,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA,CAAA;AAFpB,wBAAA,KAAA,CAAA,EAAA,OAAA,CAAA,CAAA,aAAO,SAEa,CAAC,CAAA;;;;SACtB,CAAC;AACF,QAAA,KAAA,CAAA,SAAS,GAAG,UAAO,GAAsC,EAAE,IAAa,EAAE,KAAuB,EAAA;AAA9E,YAAA,IAAA,GAAA,KAAA,KAAA,CAAA,EAAA,EAAA,GAAsC,GAAA,MAAA,CAAA,EAAA;;;;AAChD,wBAAA,KAAA,CAAA,EAAA,OAAA,CAAA,CAAA,YAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE;AAClE,gCAAA,SAAS,EAAE,EAAE;AACd,6BAAA,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA,CAAA;AAFpB,wBAAA,KAAA,CAAA,EAAA,OAAA,CAAA,CAAA,aAAO,SAEa,CAAC,CAAA;;;;SACtB,CAAC;QACF,KAAK,CAAA,KAAA,GAAG,UAAO,EAId,EAAE,GAAsC,EAAE,IAAa,EAAE,KAAuB,EAAA;AAH/E,YAAA,IAAA,KAAK,GAAA,EAAA,CAAA,KAAA,CAAA;AAGJ,YAAA,IAAA,GAAA,KAAA,KAAA,CAAA,EAAA,EAAA,GAAsC,GAAA,MAAA,CAAA,EAAA;;;;AAChC,wBAAA,KAAA,CAAA,EAAA,OAAA,CAAA,CAAA,YAAM,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,EAAE;AAClE,gCAAA,KAAK,EAAE;AACL,oCAAA,KAAK,EAAA,KAAA;AACN,iCAAA;AACF,6BAAA,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAA,CAAA;AAJpB,wBAAA,KAAA,CAAA,EAAA,OAAA,CAAA,CAAA,aAAO,SAIa,CAAC,CAAA;;;;SACtB,CAAC;AA5BA,QAAA,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;AACrB,QAAA,KAAI,CAAC,eAAe,GAAG,eAAe,CAAC;QACvC,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC3C,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC3C,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;KACpC;IAuBH,OAAC,aAAA,CAAA;AAAD,CApCA,CAAmC,kBAAkB,CAoCpD,CAAA;;;;;;;;;;"}